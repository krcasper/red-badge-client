[{"/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/index.tsx":"1","/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/reportWebVitals.ts":"2","/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/App.tsx":"3","/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/Components/Auth/Login.tsx":"4","/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/Services/LoginService.ts":"5","/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/Helpers/environment.ts":"6","/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/Components/Auth/Register.tsx":"7","/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/Services/RegisterService.ts":"8","/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/Components/Trip/TripList.tsx":"9","/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/Services/TripService.ts":"10","/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/Components/Auth/Logout.tsx":"11","/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/Components/Entry/EntryList.tsx":"12","/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/Services/EntryService.ts":"13","/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/Components/Trip/TripCreate.tsx":"14","/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/Services/TripCreateService.ts":"15"},{"size":500,"mtime":1610135148940,"results":"16","hashOfConfig":"17"},{"size":425,"mtime":1610135148948,"results":"18","hashOfConfig":"17"},{"size":3093,"mtime":1610510464805,"results":"19","hashOfConfig":"17"},{"size":1920,"mtime":1610508188424,"results":"20","hashOfConfig":"17"},{"size":501,"mtime":1610341753583,"results":"21","hashOfConfig":"17"},{"size":198,"mtime":1610333501522,"results":"22","hashOfConfig":"17"},{"size":2398,"mtime":1610486902002,"results":"23","hashOfConfig":"17"},{"size":541,"mtime":1610341786586,"results":"24","hashOfConfig":"17"},{"size":3315,"mtime":1610513384866,"results":"25","hashOfConfig":"17"},{"size":502,"mtime":1610343187965,"results":"26","hashOfConfig":"17"},{"size":393,"mtime":1610510150906,"results":"27","hashOfConfig":"17"},{"size":2769,"mtime":1610510078673,"results":"28","hashOfConfig":"17"},{"size":531,"mtime":1610504191101,"results":"29","hashOfConfig":"17"},{"size":2631,"mtime":1610513461178,"results":"30","hashOfConfig":"17"},{"size":651,"mtime":1610506701174,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1xoxggv",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/index.tsx",[],["64","65"],"/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/reportWebVitals.ts",[],"/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/App.tsx",[],"/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/Components/Auth/Login.tsx",[],"/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/Services/LoginService.ts",[],"/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/Helpers/environment.ts",[],"/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/Components/Auth/Register.tsx",["66"],"import React, { ChangeEvent } from 'react';\nimport Modal from '@material-ui/core/Modal';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { Register } from '../../Services/RegisterService';\nimport '../Styling/Register.css';\n\ninterface RegisterProps {\n    show: boolean;\n    onClose: () => void;\n    handleRegister: (email: string, username: string, password: string) => void;\n}\n\ninterface RegisterState {\n    email: string;\n    username: string;\n    password: string;\n}\n\nexport class RegisterComponent extends React.Component<RegisterProps, RegisterState> {\n    constructor(props: RegisterProps){\n        super(props);\n\n        this.state={\n            email: '',\n            username: '',\n            password: '',\n        };\n    }\n\n    \n\n    handleChangeEmail(e: ChangeEvent<HTMLInputElement>){\n        this.setState({\n            email: e.target.value,\n        })\n    }\n\n    handleChangeUsername(e: ChangeEvent<HTMLInputElement>){\n        this.setState({\n            username: e.target.value,\n        })\n    }\n\n    handleChangePassword(e: ChangeEvent<HTMLInputElement>){\n        this.setState({\n            password: e.target.value,\n        })\n    }\n\n    handleRegister() {\n        this.props.handleRegister(this.state.email, this.state.username, this.state.password);\n    }\n\n    render() {\n\n\n        return (\n            <div>\n                <Modal\n                    open={this.props.show}\n                    onClose={this.props.onClose}  >\n                    <div id='register'>\n                        <h1>Register</h1>\n                    <form noValidate autoComplete=\"off\">\n                    <TextField id=\"registerEmail\" label=\"Email\" variant=\"outlined\" onChange={this.handleChangeEmail.bind(this)}/>\n                    <br />\n                    <TextField id=\"registerUsername\" label=\"Username\" variant=\"outlined\" onChange={this.handleChangeUsername.bind(this)}/>\n                    <br />\n                    <TextField id=\"registerPassword\" label=\"Password\" variant=\"outlined\" onChange={this.handleChangePassword.bind(this)}/>\n                    <br />\n                    <br />\n                    <Button id=\"submit\" variant=\"contained\" onClick={this.handleRegister.bind(this)}>Submit</Button>\n                    </form>\n                    </div>\n                </Modal>\n            </div>\n        );\n\n    }\n}\n","/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/Services/RegisterService.ts",[],"/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/Components/Trip/TripList.tsx",[],"/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/Services/TripService.ts",[],"/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/Components/Auth/Logout.tsx",[],"/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/Components/Entry/EntryList.tsx",[],"/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/Services/EntryService.ts",[],"/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/Components/Trip/TripCreate.tsx",[],"/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/Services/TripCreateService.ts",[],{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":5,"column":10,"nodeType":"73","messageId":"74","endLine":5,"endColumn":18},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"@typescript-eslint/no-unused-vars","'Register' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]