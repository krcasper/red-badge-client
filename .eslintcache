[{"/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/index.tsx":"1","/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/reportWebVitals.ts":"2","/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/App.tsx":"3","/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/Services/LoginService.ts":"4","/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/Services/RegisterService.ts":"5","/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/Components/Auth/Login.tsx":"6","/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/Components/Trip/TripList.tsx":"7","/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/Components/Auth/Logout.tsx":"8","/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/Components/Entry/EntryList.tsx":"9","/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/Components/Auth/Register.tsx":"10","/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/Helpers/environment.ts":"11","/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/Services/EntryService.ts":"12","/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/Services/TripService.ts":"13","/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/Components/Trip/TripUpsert.tsx":"14","/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/Components/Entry/EntryUpsert.tsx":"15","/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/Components/Admin/AdminPortal.tsx":"16","/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/Services/AdminService.ts":"17","/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/Components/Admin/AdminUpsert.tsx":"18","/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/Services/UserService.ts":"19","/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/Components/Auth/AdminPortalButton.tsx":"20","/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/Components/Navigation/Navbar.tsx":"21"},{"size":500,"mtime":1610135148940,"results":"22","hashOfConfig":"23"},{"size":425,"mtime":1610135148948,"results":"24","hashOfConfig":"23"},{"size":2483,"mtime":1611052029107,"results":"25","hashOfConfig":"23"},{"size":541,"mtime":1610559934596,"results":"26","hashOfConfig":"23"},{"size":541,"mtime":1610341786586,"results":"27","hashOfConfig":"23"},{"size":1920,"mtime":1610508188424,"results":"28","hashOfConfig":"23"},{"size":3871,"mtime":1611040730714,"results":"29","hashOfConfig":"23"},{"size":393,"mtime":1610510150906,"results":"30","hashOfConfig":"23"},{"size":3867,"mtime":1611052299351,"results":"31","hashOfConfig":"23"},{"size":2339,"mtime":1610520346097,"results":"32","hashOfConfig":"23"},{"size":198,"mtime":1610333501522,"results":"33","hashOfConfig":"23"},{"size":2204,"mtime":1610567105230,"results":"34","hashOfConfig":"23"},{"size":2126,"mtime":1611039853993,"results":"35","hashOfConfig":"23"},{"size":3723,"mtime":1611040829322,"results":"36","hashOfConfig":"23"},{"size":3812,"mtime":1610562424350,"results":"37","hashOfConfig":"23"},{"size":3129,"mtime":1611051432731,"results":"38","hashOfConfig":"23"},{"size":1478,"mtime":1611051665946,"results":"39","hashOfConfig":"23"},{"size":3144,"mtime":1611051593809,"results":"40","hashOfConfig":"23"},{"size":461,"mtime":1611048639253,"results":"41","hashOfConfig":"23"},{"size":488,"mtime":1611045901865,"results":"42","hashOfConfig":"23"},{"size":4333,"mtime":1611057083950,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1u1ltew",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/index.tsx",[],["90","91"],"/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/reportWebVitals.ts",[],"/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/App.tsx",["92","93","94","95","96","97","98","99","100","101","102","103"],"import React from 'react';\nimport {LoginComponent} from \"./Components/Auth/Login\";\nimport {RegisterComponent} from \"./Components/Auth/Register\"\nimport Button from '@material-ui/core/Button';\nimport './App.css';\nimport { TripList } from './Components/Trip/TripList';\nimport EntryList from './Components/Entry/EntryList'\nimport AdminList from './Components/Admin/AdminPortal'\nimport { Logout } from './Components/Auth/Logout';\nimport { Login } from './Services/LoginService';\nimport { Register } from './Services/RegisterService';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  withRouter,\n  RouteComponentProps\n} from \"react-router-dom\";\nimport './App.css'; \nimport goat from './assets/goat.png';\nimport { User } from './Types/User';\nimport { getMyUser } from './Services/UserService';\nimport { AdminPortalButton } from './Components/Auth/AdminPortalButton';\nimport NavBar from './Components/Navigation/Navbar';\n\ninterface AppProps {\n\n}\n\ninterface AppState {\n\n  sessionToken: string | null;\n}\n\ntype AppAllProps = AppProps;\n\nclass App extends React.Component<AppAllProps, AppState> {\n  constructor(props: AppAllProps){\n    super(props);\n\n    this.state = {\n      sessionToken: null,\n    };\n  }\n\n  async componentDidMount() {\n    const sessionToken = localStorage.getItem('token');\n    if(sessionToken) {\n      this.setState({ sessionToken });\n      \n    }\n  }\n\n  setSessionToken (sessionToken: string | null) {\n    this.setState({ sessionToken });\n  }\n\n  render() {\n    return ( <Router>\n      <div className=\"App\">\n\n        <NavBar sessionToken={this.state.sessionToken} setSessionToken={this.setSessionToken.bind(this)} />\n        \n        \n        <h1>welcome to wandergoat</h1>\n        \n        <img src={goat} alt={\"goat\"} />\n        <h4>A travel planning and itinerary building web application</h4>\n        \n\n        \n\n        \n\n\n      \n\n\n      \n      <Switch>\n        <Route path='/' exact>      \n          {this.isLoggedIn() && <TripList sessionToken={this.state.sessionToken}></TripList>}\n        </Route>\n        <Route exact path='/admin'>\n          {this.isLoggedIn() && <AdminList sessionToken={this.state.sessionToken}></AdminList>}\n        </Route>\n        <Route path='/:tripId'>\n          {this.isLoggedIn() && <EntryList sessionToken={this.state.sessionToken}></EntryList>}\n        </Route>\n      </Switch>\n     \n\n\n      </div>\n      </Router>\n    );\n  }\n\n  isLoggedIn() {\n    return this.state.sessionToken !== null;\n  }\n  \n}\n\n\n\nexport default App;","/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/Services/LoginService.ts",[],"/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/Services/RegisterService.ts",[],"/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/Components/Auth/Login.tsx",[],"/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/Components/Trip/TripList.tsx",[],"/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/Components/Auth/Logout.tsx",[],"/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/Components/Entry/EntryList.tsx",[],"/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/Components/Auth/Register.tsx",[],"/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/Helpers/environment.ts",[],"/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/Services/EntryService.ts",[],"/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/Services/TripService.ts",[],"/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/Components/Trip/TripUpsert.tsx",[],"/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/Components/Entry/EntryUpsert.tsx",[],"/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/Components/Admin/AdminPortal.tsx",["104"],"import React from 'react';\nimport { getUsers, editUsers, deleteUsers } from '../../Services/AdminService';\nimport { User } from '../../Types/User';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport AdminUpsertComponent from './AdminUpsert';\nimport { Link } from 'react-router-dom';\nimport { Button } from '@material-ui/core';\nimport { styled } from '@material-ui/core/styles';\n\nconst MyTable = styled(TableContainer)({\n  alignTable: 'center',\n  width: '75%',\n  marginTop: '0px',\n  marginBottom: '0px',\n  marginLeft: 'auto',\n  marginRight: 'auto',\n  border: '2px solid black',\n});\n\n\ninterface AdminListProps {\n    sessionToken: string | null;\n}\n\ninterface AdminListState {\n    users?: User[];\n    loading?: boolean;\n}\n\nclass AdminList extends React.Component<AdminListProps, AdminListState> {\n    constructor(props: AdminListProps){\n        super(props);\n\n        this.state = {};\n        \n    }\n\n    onUpsert() {\n      this.getUsers();\n    }\n\n    componentDidUpdate() {\n        if (this.isLoggedIn() && !this.state.users && !this.state.loading) {\n            this.getUsers();\n        }\n\n    }\n\n    componentDidMount() {\n      if (this.isLoggedIn() && !this.state.users && !this.state.loading) {\n        this.getUsers();\n      }\n    }\n\n    isLoggedIn() {\n        return localStorage.getItem('token') !== null;\n      }\n    \n\n    async getUsers(){\n        try{\n            this.setState({ loading: true });\n            const users = await getUsers();\n\n            this.setState({ users, loading: false });\n            console.log(users);\n        } catch (e){\n            console.log(e)\n        }\n\n    }\n\n\n\n    async deleteUsers(id: number) {\n      await deleteUsers(id);\n      this.getUsers();\n    }\n\n\n\n    displayUser(user: User) {\n      return( \n      <TableRow key={user.id}>\n      <TableCell>{user.email}</TableCell>\n      <TableCell>{user.username}</TableCell>\n      \n      <TableCell>{user.checkAdmin}</TableCell>\n     \n     \n      <TableCell>    <AdminUpsertComponent onUpsert={this.onUpsert.bind(this)} sessionToken={this.props.sessionToken} user={user}></AdminUpsertComponent>\n\n      <Button onClick={() => this.deleteUsers(user.id)}>Delete</Button></TableCell>\n    </TableRow>\n    \n      );\n    }\n\n\n\n    render() {\n        return(\n        <div>\n          <Link to='/'>Back</Link>\n            <MyTable>\n      <Table>\n        <TableHead>\n          <TableRow>\n            \n            \n            <TableCell>Email</TableCell>\n            <TableCell>Username</TableCell>\n            <TableCell>Is Admin</TableCell>\n            <TableCell>Actions</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          \n\n\n        {this.state.users && this.state.users.map((user) => \n            this.displayUser(user))}\n        </TableBody>\n      </Table>\n    </MyTable>\n  \n    \n        </div>\n        );\n    }\n}\n\nexport default AdminList","/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/Services/AdminService.ts",[],"/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/Components/Admin/AdminUpsert.tsx",[],"/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/Services/UserService.ts",[],"/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/Components/Auth/AdminPortalButton.tsx",[],["105","106"],"/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/Components/Navigation/Navbar.tsx",["107","108","109"],{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","severity":1,"message":"115","line":2,"column":9,"nodeType":"116","messageId":"117","endLine":2,"endColumn":23},{"ruleId":"114","severity":1,"message":"118","line":3,"column":9,"nodeType":"116","messageId":"117","endLine":3,"endColumn":26},{"ruleId":"114","severity":1,"message":"119","line":4,"column":8,"nodeType":"116","messageId":"117","endLine":4,"endColumn":14},{"ruleId":"114","severity":1,"message":"120","line":9,"column":10,"nodeType":"116","messageId":"117","endLine":9,"endColumn":16},{"ruleId":"114","severity":1,"message":"121","line":10,"column":10,"nodeType":"116","messageId":"117","endLine":10,"endColumn":15},{"ruleId":"114","severity":1,"message":"122","line":11,"column":10,"nodeType":"116","messageId":"117","endLine":11,"endColumn":18},{"ruleId":"114","severity":1,"message":"123","line":16,"column":3,"nodeType":"116","messageId":"117","endLine":16,"endColumn":7},{"ruleId":"114","severity":1,"message":"124","line":17,"column":3,"nodeType":"116","messageId":"117","endLine":17,"endColumn":13},{"ruleId":"114","severity":1,"message":"125","line":18,"column":3,"nodeType":"116","messageId":"117","endLine":18,"endColumn":22},{"ruleId":"114","severity":1,"message":"126","line":22,"column":10,"nodeType":"116","messageId":"117","endLine":22,"endColumn":14},{"ruleId":"114","severity":1,"message":"127","line":23,"column":10,"nodeType":"116","messageId":"117","endLine":23,"endColumn":19},{"ruleId":"114","severity":1,"message":"128","line":24,"column":10,"nodeType":"116","messageId":"117","endLine":24,"endColumn":27},{"ruleId":"114","severity":1,"message":"129","line":2,"column":20,"nodeType":"116","messageId":"117","endLine":2,"endColumn":29},{"ruleId":"110","replacedBy":"130"},{"ruleId":"112","replacedBy":"131"},{"ruleId":"114","severity":1,"message":"132","line":3,"column":18,"nodeType":"116","messageId":"117","endLine":3,"endColumn":29},{"ruleId":"114","severity":1,"message":"133","line":5,"column":8,"nodeType":"116","messageId":"117","endLine":5,"endColumn":18},{"ruleId":"114","severity":1,"message":"134","line":17,"column":10,"nodeType":"116","messageId":"117","endLine":17,"endColumn":14},"no-native-reassign",["135"],"no-negated-in-lhs",["136"],"@typescript-eslint/no-unused-vars","'LoginComponent' is defined but never used.","Identifier","unusedVar","'RegisterComponent' is defined but never used.","'Button' is defined but never used.","'Logout' is defined but never used.","'Login' is defined but never used.","'Register' is defined but never used.","'Link' is defined but never used.","'withRouter' is defined but never used.","'RouteComponentProps' is defined but never used.","'User' is defined but never used.","'getMyUser' is defined but never used.","'AdminPortalButton' is defined but never used.","'editUsers' is defined but never used.",["135"],["136"],"'AppBarProps' is defined but never used.","'Typography' is defined but never used.","'Omit' is defined but never used.","no-global-assign","no-unsafe-negation"]