[{"/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/index.tsx":"1","/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/reportWebVitals.ts":"2","/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/App.tsx":"3","/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/Components/Auth/Login.tsx":"4","/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/Services/LoginService.ts":"5","/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/Helpers/environment.ts":"6","/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/Components/Auth/Register.tsx":"7","/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/Services/RegisterService.ts":"8","/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/Components/Trip/TripList.tsx":"9","/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/Services/TripService.ts":"10","/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/Components/Auth/Logout.tsx":"11","/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/Components/Entry/EntryList.tsx":"12","/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/Services/EntryService.ts":"13"},{"size":500,"mtime":1610135148940,"results":"14","hashOfConfig":"15"},{"size":425,"mtime":1610135148948,"results":"16","hashOfConfig":"15"},{"size":2797,"mtime":1610414038818,"results":"17","hashOfConfig":"15"},{"size":1973,"mtime":1610411336764,"results":"18","hashOfConfig":"15"},{"size":501,"mtime":1610341753583,"results":"19","hashOfConfig":"15"},{"size":198,"mtime":1610333501522,"results":"20","hashOfConfig":"15"},{"size":2398,"mtime":1610411417627,"results":"21","hashOfConfig":"15"},{"size":541,"mtime":1610341786586,"results":"22","hashOfConfig":"15"},{"size":2641,"mtime":1610412334301,"results":"23","hashOfConfig":"15"},{"size":502,"mtime":1610343187965,"results":"24","hashOfConfig":"15"},{"size":392,"mtime":1610410681577,"results":"25","hashOfConfig":"15"},{"size":2304,"mtime":1610414533868,"results":"26","hashOfConfig":"15"},{"size":509,"mtime":1610415221352,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1xoxggv",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/index.tsx",[],["57","58"],"/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/reportWebVitals.ts",[],"/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/App.tsx",[],"/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/Components/Auth/Login.tsx",["59"],"import React, { ChangeEvent } from 'react';\nimport Modal from '@material-ui/core/Modal';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport '../Styling/Login.css';\nimport { Login } from '../../Services/LoginService';\n\ninterface LoginProps {\n    show: boolean;\n    onClose: () => void;\n    handleLogin: (username: string, password: string) => void;\n}\n\ninterface LoginState {\n    username: string;\n    password: string;\n}\n\nexport class LoginComponent extends React.Component<LoginProps, LoginState> {\n    constructor(props: LoginProps){\n        super(props);\n\n        this.state={\n            username: '',\n            password: '',\n        };\n    }\n\n    \n\n    handleChangeUsername(e: ChangeEvent<HTMLInputElement>){\n        this.setState({\n            username: e.target.value,\n        })\n    }\n\n    handleChangePassword(e: ChangeEvent<HTMLInputElement>){\n        this.setState({\n            password: e.target.value,\n        })\n    }\n\n\n    handleLogin() {\n        this.props.handleLogin(this.state.username, this.state.password);\n    }\n\n    render() {\n        return (\n            <div>\n                <Modal\n                    open={this.props.show}\n                    onClose={this.props.onClose}  >\n                    <div id='login'>\n                        <h1>Login</h1>\n                    <form noValidate autoComplete=\"off\">\n                        <TextField id=\"loginUsername\" label=\"Username\" variant=\"outlined\" onChange={this.handleChangeUsername.bind(this)}/>\n                        <br />\n                        <TextField id=\"loginPassword\" label=\"Password\" variant=\"outlined\" onChange={this.handleChangePassword.bind(this)}/>\n                        <br />\n                        <Button id=\"submit\" variant=\"contained\" onClick={this.handleLogin.bind(this)}>Submit</Button>\n                    </form>\n                    </div>\n                </Modal>\n            </div>\n        );\n\n    }\n}\n","/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/Services/LoginService.ts",[],"/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/Helpers/environment.ts",[],"/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/Components/Auth/Register.tsx",["60"],"import React, { ChangeEvent } from 'react';\nimport Modal from '@material-ui/core/Modal';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { Register } from '../../Services/RegisterService';\nimport '../Styling/Register.css';\n\ninterface RegisterProps {\n    show: boolean;\n    onClose: () => void;\n    handleRegister: (email: string, username: string, password: string) => void;\n}\n\ninterface RegisterState {\n    email: string;\n    username: string;\n    password: string;\n}\n\nexport class RegisterComponent extends React.Component<RegisterProps, RegisterState> {\n    constructor(props: RegisterProps){\n        super(props);\n\n        this.state={\n            email: '',\n            username: '',\n            password: '',\n        };\n    }\n\n    \n\n    handleChangeEmail(e: ChangeEvent<HTMLInputElement>){\n        this.setState({\n            email: e.target.value,\n        })\n    }\n\n    handleChangeUsername(e: ChangeEvent<HTMLInputElement>){\n        this.setState({\n            username: e.target.value,\n        })\n    }\n\n    handleChangePassword(e: ChangeEvent<HTMLInputElement>){\n        this.setState({\n            password: e.target.value,\n        })\n    }\n\n    handleRegister() {\n        this.props.handleRegister(this.state.email, this.state.username, this.state.password);\n    }\n\n    render() {\n\n\n        return (\n            <div>\n                <Modal\n                    open={this.props.show}\n                    onClose={this.props.onClose}  >\n                    <div id='register'>\n                        <h1>Register</h1>\n                    <form noValidate autoComplete=\"off\">\n                    <TextField id=\"registerEmail\" label=\"Email\" variant=\"outlined\" onChange={this.handleChangeEmail.bind(this)}/>\n                    <br />\n                    <TextField id=\"registerUsername\" label=\"Username\" variant=\"outlined\" onChange={this.handleChangeUsername.bind(this)}/>\n                    <br />\n                    <TextField id=\"registerPassword\" label=\"Password\" variant=\"outlined\" onChange={this.handleChangePassword.bind(this)}/>\n                    <br />\n                    <br />\n                    <Button id=\"submit\" variant=\"contained\" onClick={this.handleRegister.bind(this)}>Submit</Button>\n                    </form>\n                    </div>\n                </Modal>\n            </div>\n        );\n\n    }\n}\n","/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/Services/RegisterService.ts",[],"/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/Components/Trip/TripList.tsx",[],"/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/Services/TripService.ts",[],"/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/Components/Auth/Logout.tsx",[],"/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/Components/Entry/EntryList.tsx",[],"/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/Services/EntryService.ts",[],{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":6,"column":10,"nodeType":"67","messageId":"68","endLine":6,"endColumn":15},{"ruleId":"65","severity":1,"message":"69","line":5,"column":10,"nodeType":"67","messageId":"68","endLine":5,"endColumn":18},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"@typescript-eslint/no-unused-vars","'Login' is defined but never used.","Identifier","unusedVar","'Register' is defined but never used.","no-global-assign","no-unsafe-negation"]