[{"/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/index.tsx":"1","/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/reportWebVitals.ts":"2","/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/App.tsx":"3","/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/Components/Auth/Login.tsx":"4","/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/Services/LoginService.ts":"5","/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/Helpers/environment.ts":"6","/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/Components/Auth/Register.tsx":"7","/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/Services/RegisterService.ts":"8","/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/Components/Trip/TripList.tsx":"9","/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/Services/TripService.ts":"10","/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/Components/Auth/Logout.tsx":"11","/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/Components/Entry/EntryList.tsx":"12","/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/Services/EntryService.ts":"13","/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/Components/Trip/TripUpsert.tsx":"14","/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/Components/Entry/EntryUpsert.tsx":"15"},{"size":500,"mtime":1610135148940,"results":"16","hashOfConfig":"17"},{"size":425,"mtime":1610135148948,"results":"18","hashOfConfig":"17"},{"size":3342,"mtime":1610564929255,"results":"19","hashOfConfig":"17"},{"size":1920,"mtime":1610508188424,"results":"20","hashOfConfig":"17"},{"size":541,"mtime":1610559934596,"results":"21","hashOfConfig":"17"},{"size":198,"mtime":1610333501522,"results":"22","hashOfConfig":"17"},{"size":2339,"mtime":1610520346097,"results":"23","hashOfConfig":"17"},{"size":541,"mtime":1610341786586,"results":"24","hashOfConfig":"17"},{"size":3875,"mtime":1610561720841,"results":"25","hashOfConfig":"17"},{"size":2135,"mtime":1610554109088,"results":"26","hashOfConfig":"17"},{"size":393,"mtime":1610510150906,"results":"27","hashOfConfig":"17"},{"size":3960,"mtime":1610561857947,"results":"28","hashOfConfig":"17"},{"size":2204,"mtime":1610567105230,"results":"29","hashOfConfig":"17"},{"size":3745,"mtime":1610558032316,"results":"30","hashOfConfig":"17"},{"size":3812,"mtime":1610562424350,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1xoxggv",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/index.tsx",[],["64","65"],"/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/reportWebVitals.ts",[],"/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/App.tsx",["66"],"import React from 'react';\nimport {LoginComponent} from \"./Components/Auth/Login\";\nimport {RegisterComponent} from \"./Components/Auth/Register\"\nimport Button from '@material-ui/core/Button';\nimport './App.css';\nimport { TripList } from './Components/Trip/TripList';\nimport EntryList from './Components/Entry/EntryList'\nimport { Logout } from './Components/Auth/Logout';\nimport { Login } from './Services/LoginService';\nimport { Register } from './Services/RegisterService';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport './App.css'; \n\ninterface AppProps {\n\n}\n\ninterface AppState {\n  showLogin: boolean;\n  showRegister: boolean;\n  sessionToken: string | null;\n}\n\nclass App extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps){\n    super(props);\n\n    this.state = {\n      showLogin: false,\n      showRegister: false,\n      sessionToken: null,\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ sessionToken: localStorage.getItem('token')});\n  }\n\n  closeModals() {\n    this.setState({\n      showLogin: false,\n      showRegister: false,\n    });\n  }\n\n  handleOpenLogin() {\n    this.setState({\n      showLogin: true,\n    });\n  }\n\n\n  handleOpenRegister() {\n    this.setState({\n      showRegister: true,\n    });\n  }\n\n\n  isNotLoggedIn() {\n    return this.state.sessionToken === null;\n  }\n\n\n  isLoggedIn() {\n    return this.state.sessionToken !== null;\n  }\n\n  logout() {\n    localStorage.removeItem('token');\n    this.setState({ sessionToken: null });\n  }\n\n  async handleLogin(username: string, password: string) {\n    const sessionToken = await Login(username, password);\n    console.log(sessionToken);\n    this.setState({\n      sessionToken,\n      showLogin: false,\n    });\n }\n\n async handleRegister(email: string, username: string, password: string) {\n  const sessionToken = await Register(email, username, password);\n  console.log(sessionToken);\n  this.setState({\n    sessionToken,\n    showRegister: false,\n  });\n} \n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>The Wandering Goat</h1>\n        <h4>A travel planning and itinerary building web application</h4>\n        \n\n        <img src='https://images.pexels.com/photos/2832038/pexels-photo-2832038.jpeg?auto=compress&cs=tinysrgb&h=750&w=1260'/>\n\n        <LoginComponent\n      handleLogin={this.handleLogin.bind(this)}\n      show={this.state.showLogin}\n      onClose={this.closeModals.bind(this)}  />\n      \n      {this.isNotLoggedIn() && <Button variant=\"contained\" onClick={this.handleOpenLogin.bind(this)}>Login</Button>}\n\n      <RegisterComponent\n      handleRegister={this.handleRegister.bind(this)}\n      show={this.state.showRegister}\n      onClose={this.closeModals.bind(this)}  />\n      \n      {this.isNotLoggedIn() && <Button variant=\"contained\" onClick={this.handleOpenRegister.bind(this)}>Register</Button>}\n\n      \n      <Logout onLogout={this.logout.bind(this)}></Logout>\n\n\n      \n\n\n      <Router>\n      <Switch>\n        <Route path='/' exact>      \n          {this.isLoggedIn() && <TripList sessionToken={this.state.sessionToken}></TripList>}\n        </Route>\n\n        <Route path='/:tripId'>\n          {this.isLoggedIn() && <EntryList sessionToken={this.state.sessionToken}></EntryList>}\n        </Route>\n      </Switch>\n     </Router>\n\n\n      </div>\n    );\n  }\n  \n}\n\n\n\nexport default App;","/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/Components/Auth/Login.tsx",[],"/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/Services/LoginService.ts",[],"/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/Helpers/environment.ts",[],"/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/Components/Auth/Register.tsx",[],"/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/Services/RegisterService.ts",[],"/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/Components/Trip/TripList.tsx",[],"/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/Services/TripService.ts",[],"/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/Components/Auth/Logout.tsx",[],"/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/Components/Entry/EntryList.tsx",[],"/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/Services/EntryService.ts",[],"/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/Components/Trip/TripUpsert.tsx",[],"/Users/kellycasper/Code/redBadge/redBadgeProject/final-project/red-client/src/Components/Entry/EntryUpsert.tsx",[],{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":103,"column":9,"nodeType":"73","endLine":103,"endColumn":127},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]